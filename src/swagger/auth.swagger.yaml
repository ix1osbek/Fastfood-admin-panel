openapi: 3.0.3
info:
  title: Fastfood CRM website
  description: With this project, you can systematically control fast food restaurants through CRM.
  version: 1.0.0
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        login:
          type: string
          example: admin1
        role:
          type: string
          enum: [admin, superadmin]
          example: admin
      required:
        - id
        - login
        - role
    CreateAdminRequest:
      type: object
      properties:
        login:
          type: string
          example: newadmin
        password:
          type: string
          example: Password123
      required:
        - login
        - password
    UpdateAdminRequest:
      type: object
      properties:
        login:
          type: string
          example: updatedadmin
        password:
          type: string
          example: NewPassword123
    LoginRequest:
      type: object
      properties:
        login:
          type: string
          example: admin1
        password:
          type: string
          example: Password123
      required:
        - login
        - password
    LoginResponse:
      type: object
      properties:
        message:
          type: string
          example: Muvaffaqiyatli tizimga kirildi
        accessToken:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        user:
          type: object
          properties:
            login:
              type: string
              example: admin1
      required:
        - message
        - accessToken
        - user
    Error:
      type: object
      properties:
        message:
          type: string
          example: Xato xabar
      required:
        - message
paths:
  /auth/create_admin:
    post:
      summary: Yangi admin yaratish
      description: Superadmin roli orqali yangi admin foydalanuvchi yaratadi
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAdminRequest'
      responses:
        '201':
          description: Admin muvaffaqiyatli yaratildi
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Admin muvaffaqiyatli yaratildi!
                  admin:
                    type: object
                    properties:
                      login:
                        type: string
                        example: newadmin
                      role:
                        type: string
                        example: admin
        '400':
          description: Login allaqachon mavjud
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Autentifikatsiya xatosi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Superadmin roli talab qilinadi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/delete_admin/{id}:
    delete:
      summary: Adminni o'chirish
      description: Superadmin roli orqali admin foydalanuvchini o'chiradi
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
          description: O'chiriladigan adminning IDsi
      responses:
        '200':
          description: Admin muvaffaqiyatli o'chirildi
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Admin muvaffaqiyatli o'chirildi!
        '401':
          description: Autentifikatsiya xatosi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Superadmin roli talab qilinadi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Admin topilmadi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/all_admins:
    get:
      summary: Barcha adminlarni olish
      description: Superadmin roli orqali barcha admin foydalanuvchilar ro'yxatini oladi
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Adminlar ro'yxati
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Autentifikatsiya xatosi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Superadmin roli talab qilinadi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/admin/{id}:
    get:
      summary: Adminni ID bo'yicha olish
      description: Superadmin roli orqali ma'lum bir admin foydalanuvchini oladi
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
          description: Adminning IDsi
      responses:
        '200':
          description: Admin ma'lumotlari
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Autentifikatsiya xatosi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Superadmin roli talab qilinadi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Admin topilmadi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/update_admin/{id}:
    put:
      summary: Adminni yangilash
      description: Superadmin roli orqali admin foydalanuvchi ma'lumotlarini yangilaydi
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            example: 1
          description: Yangilanadigan adminning IDsi
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdminRequest'
      responses:
        '200':
          description: Admin muvaffaqiyatli yangilandi
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Admin muvaffaqiyatli yangilandi
                  admin:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      login:
                        type: string
                        example: updatedadmin
        '401':
          description: Autentifikatsiya xatosi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Superadmin roli talab qilinadi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Admin topilmadi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/login:
    post:
      summary: Tizimga kirish
      description: Foydalanuvchi login va parol orqali tizimga kiradi va JWT token oladi
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Muvaffaqiyatli tizimga kirildi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Login yoki parol xato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/logout:
    post:
      summary: Tizimdan chiqish
      description: Foydalanuvchi tizimdan chiqadi va refreshToken o'chiriladi
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Muvaffaqiyatli tizimdan chiqildi
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Muvaffaqiyatli tizimdan chiqildi
        '401':
          description: Autentifikatsiya xatosi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
